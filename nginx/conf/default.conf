server {
    listen       80;
    server_name  localhost;
    resolver 127.0.0.11 valid=30s;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    access_log syslog:server=logstash:5140,tag=nginx_access logstash;
    error_log syslog:server=logstash:5140,tag=nginx_error notice;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    # set $esserver "http://elasticsearch:9200";

    # location /essearch {
    #     proxy_pass $esserver/guo/_search;
    #     proxy_http_version 1.1;
    #     proxy_set_header Connection "Keep-Alive";
    #     proxy_set_header Proxy-Connection "Keep-Alive";
    # }

    # location /pttsearch {
    #     proxy_pass $esserver/ptt*/_search;
    #     proxy_http_version 1.1;
    #     proxy_set_header Connection "Keep-Alive";
    #     proxy_set_header Proxy-Connection "Keep-Alive";
    # }

    # location /gnews/ {
    #     access_log off;
    #     rewrite ^ $request_uri;
    #     rewrite ^/gnews/(.*) $1 break;
    #     return 400;
    #     proxy_pass https://news.google.com/rss/search?q=$uri&hl=zh-TW&gl=TW&ceid=TW%3Azh-Hant;
    #     proxy_http_version 1.1;
    #     proxy_set_header Connection "Keep-Alive";
    #     proxy_set_header Proxy-Connection "Keep-Alive";
    # }

    # location /galerts_guo {
    #     access_log off;
    #     proxy_pass https://www.google.com.tw/alerts/feeds/07783346754056002007/11202637622134750130;
    #     proxy_http_version 1.1;
    #     proxy_set_header Connection "Keep-Alive";
    #     proxy_set_header Proxy-Connection "Keep-Alive";
    # }

    # location /galerts_y6 {
    #     access_log off;
    #     proxy_pass https://www.google.com.tw/alerts/feeds/07783346754056002007/10819186960763977251;
    #     proxy_http_version 1.1;
    #     proxy_set_header Connection "Keep-Alive";
    #     proxy_set_header Proxy-Connection "Keep-Alive";
    # }

	location /g_alerts_icnews {
		access_log off;
		proxy_pass https://www.google.com.tw/alerts/feeds/05744008784620241486/12001896736764425965;
		proxy_set_header Connection "Keep-Alive";
		proxy_set_header Proxy-Connection "Keep-Alive";
	}

    # set $upstream "http://gta_srv:8080";
	# gta_srv: container's name
	set $upstream "http://icisCrawlers:8080";
	# set $upstream "https://www.google.com.tw";
    location /srvapi {
        resolver 127.0.0.11 valid=30s;
        rewrite /srvapi/(.*) /$1  break;
        # 將目標設定為參數，避免nginx啟動時，檢查出無效域名，導致無法正常啟用
        # gta_srv為外部服務(other docker-compose)
        proxy_pass $upstream;
    }

    set $kibanaserver "http://kibana:5601";

    location /kibana/ {
        access_log off;
        rewrite /kibana/(.*) /$1 break;
        proxy_pass $kibanaserver;
        auth_basic "You need to login";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
