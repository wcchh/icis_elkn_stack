input {
  file {
    path => "/usr/share/logstash/data/pttdata/*.json"
    codec => "json"
    sincedb_path => "/dev/null" 
    mode => "read"
    file_chunk_size => 102400
  }
}
filter {
  # split {
  #   field => "[articles]"
  # }

  mutate {
    # 將需要的欄位拿出來
    rename => { 
      "article_title" => "title"
      "content" => "fulltext"
      "date" => "published"
      "url" => "link"
      "ip" => "author_ip"
      "board" => "channel"
    }

    gsub => [
      # 修正時間字串，當日期為個位數時，前方會有空格的問題
      # 將兩個空格，取代為一個空格
      "published", "  ", " "
    ]

    # 不刪除articles物件，將推文內容保留起來 
  }

  date {
    timezone => "Asia/Taipei"
    match => ["published" , "E MMM d HH:mm:ss yyy"]
    target => "published"
    add_field => { "published_month" => "%{published}" }
  }

  if "_dateparsefailure" in [tags] {
    drop { }
  }

  if [published] == "" {
    drop { }
  }

  mutate {
    gsub => [
      "published_month", "-[0-9]{2}T.*", ""
    ]
  }

  geoip {
    source => "author_ip"
  }

  fingerprint {
    # 建立唯一識別字串，避免重複的新聞一直被儲存
    method => "MD5"
    key => "guo"
    source => "link"
    target => "link_md5"
  }

  ruby {
    code => "
      event.set('imgurs_f', event.get('fulltext').scan(/https?:\/\/i\.imgur\.com\/\S*\.jpg/m))
    "
  }

  ruby {
    code => "
      event.set('imgurs_m', event.get('messages').scan(/https?:\/\/i\.imgur\.com\/\S*\.jpg/m))
    "
  }

  ruby {
    code => "
      event.set('imgurs', event.get('imgurs_f') + event.get('imgurs_m'))
    "
    remove_field => ["imgurs_f", "imgurs_m"]
  }
}
output {
  elasticsearch {
    hosts => "elasticsearch"
    index => "ptt-%{published_month}"
    action => "index"
    document_id => "%{link_md5}"
  }
  # stdout {
  #   codec => rubydebug
  # }
}
